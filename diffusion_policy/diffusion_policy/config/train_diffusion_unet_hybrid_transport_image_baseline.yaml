defaults:
- _self_
- task: transport_image

name: train_diffusion_unet_hybrid
exp_name: baseline

_target_: 
  diffusion_policy.workspace.train_diffusion_unet_hybrid_workspace.TrainDiffusionUnetHybridWorkspace

task_name: ${task.name}
shape_meta: ${task.shape_meta}

horizon: 16
n_obs_steps: 2
n_action_steps: 8
n_latency_steps: 0
dataset_obs_steps: ${n_obs_steps}
past_action_visible: false
keypoint_visible_rate: 1.0
obs_as_global_cond: true
color_jitter: false

# -------------------------- pay attention here !!! ------------------------- #
use_ema: true
normalize_obs: true
group_norm:
  enable: true
  return_fullgrad_bias: false
robomimic_visual_encoder:
  pretrained: true
  pool_class: SpatialMeanPool # replaced "SpatialSoftmax"

saliency:
  enabled: false
  aug_strategy: robosaga
  warmup_epochs: 10
  saliency_saga_cap: 0.8
  saliency_erase_threshold: 0.5
  blend_alpha: 0.5
  update_ratio: 0.1  # update 10% of the buffer per training batch
  aug_ratio: 0.5  # augment 50% of the trajectories in the batch
  buffer_shape: [84, 84]
  output_shape: [76, 76]
  buffer_depth:
  debug_vis: false
  debug_save: true
  save_dir: ''
  save_debug_im_every_n_batches: 50
  background_path: ../data/backgrounds/

soda:
  background_path: ../data/backgrounds/

# ---------------------------------------------------------------------------- #

policy:
  _target_: 
    diffusion_policy.policy.diffusion_unet_hybrid_image_policy.DiffusionUnetHybridImagePolicy

  shape_meta: ${shape_meta}

  noise_scheduler:
    _target_: diffusers.schedulers.scheduling_ddpm.DDPMScheduler
    num_train_timesteps: 100
    beta_start: 0.0001
    beta_end: 0.02
    beta_schedule: squaredcos_cap_v2
    variance_type: fixed_small # Yilun's paper uses fixed_small_log instead, but easy to cause Nan
    clip_sample: true # required when predict_epsilon=False
    prediction_type: epsilon # or sample

  horizon: ${horizon}
  n_action_steps: ${eval:'${n_action_steps}+${n_latency_steps}'}
  n_obs_steps: ${n_obs_steps}
  num_inference_steps: 100
  obs_as_global_cond: ${obs_as_global_cond}
  crop_shape: [76, 76]
  # crop_shape: null
  diffusion_step_embed_dim: 128
  down_dims: [512, 1024, 2048]
  kernel_size: 5
  n_groups: 8
  cond_predict_scale: true
  normalize_obs: ${normalize_obs}
  eval_fixed_crop: true
  group_norm: ${group_norm}
  robomimic_visual_encoder: ${robomimic_visual_encoder}


ema:
  _target_: diffusion_policy.model.diffusion.ema_model.EMAModel
  update_after_step: 0
  inv_gamma: 1.0
  power: 0.75
  min_value: 0.0
  max_value: 0.9999

dataloader:
  batch_size: 64
  num_workers: 16
  shuffle: true
  pin_memory: true
  persistent_workers: false

val_dataloader:
  batch_size: 64
  num_workers: 16
  shuffle: false
  pin_memory: true
  persistent_workers: false

optimizer:
  _target_: torch.optim.AdamW
  lr: 1.0e-4
  betas: [0.95, 0.999]
  eps: 1.0e-8
  weight_decay: 1.0e-6

training:
  device: cuda:0
  seed: 42
  debug: false
  resume: true
  # optimization
  lr_scheduler: cosine
  lr_warmup_steps: 500
  num_epochs: 600
  gradient_accumulate_every: 1
  # EMA destroys performance when used with BatchNorm
  # replace BatchNorm with GroupNorm.
  use_ema: ${use_ema}
  # training loop control
  # in epochs
  rollout_every: 50
  checkpoint_every: 50
  val_every: 1
  sample_every: 5
  # steps per epoch
  max_train_steps:
  max_val_steps:
  # misc
  tqdm_interval_sec: 1.0

logging:
  project: ${task_name}
  resume: true
  mode: online
  name: ${task_name}_${name}_${exp_name}
  tags: ['${name}', '${task_name}']
  id:
  group:
  allow_val_change: true


checkpoint:
  topk:
    monitor_key: test_mean_score
    mode: max
    k: 5
    format_str: epoch={epoch:04d}-test_mean_score={test_mean_score:.3f}.ckpt
  save_last_ckpt: true
  save_last_snapshot: false

multi_run:
  run_dir: ../experiments/${task_name}/diffusion_policy/${exp_name}
  wandb_name_base: ${now:%Y.%m.%d-%H.%M.%S}_${name}_${task_name}

hydra:
  job:
    override_dirname: ${name}
  run:
    dir: ../experiments/${task_name}/diffusion_policy/${exp_name}
  sweep:
    dir: ../experiments/${task_name}/diffusion_policy/${exp_name}
    subdir: ${hydra.job.num}
